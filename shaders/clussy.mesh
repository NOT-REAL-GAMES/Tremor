#version 460
#extension GL_NV_mesh_shader : require

layout(local_size_x = 32, local_size_y = 1, local_size_z = 1) in;
layout(triangles, max_vertices = 3, max_primitives = 1) out;

// Per-vertex outputs
layout(location = 0) out vec3 outColor[];

void main() {
    // Only work with first invocation
    if (gl_LocalInvocationIndex == 0) {
        // Simple triangle
        gl_MeshVerticesNV[0].gl_Position = vec4(-0.5, -0.5, 0.0, 1.0);
        gl_MeshVerticesNV[1].gl_Position = vec4(0.5, -0.5, 0.0, 1.0);
        gl_MeshVerticesNV[2].gl_Position = vec4(0.0, 0.5, 0.0, 1.0);
        
        outColor[0] = vec3(1.0, 0.0, 0.0);
        outColor[1] = vec3(0.0, 1.0, 0.0);
        outColor[2] = vec3(0.0, 0.0, 1.0);
        
        // Set up vertex indices - note the NV suffix
        gl_PrimitiveIndicesNV[0] = 0;
        gl_PrimitiveIndicesNV[1] = 1;
        gl_PrimitiveIndicesNV[2] = 2;
        
        // Set the number of vertices and primitives
        gl_PrimitiveCountNV = 1;
    }
}